version: "3.1"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    networks: 
      - kafka_network
    ports:
    - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    networks: 
      - kafka_network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CREATE_TOPICS: "alerts:3:1"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server kafka:9092 --topic alerts --describe"]
      interval: 2s
      timeout: 5s
      retries: 10
    depends_on:
      - zookeeper   
  
  springkafkaapp:
    image: springkafkaapp
    networks: 
      - kafka_network
    ports:
      - "8080:8080"
    build:
      context: "./"
      dockerfile: "Dockerfile"
    depends_on:
      kafka:
        condition: service_healthy

networks:
  kafka_network:
    name: kafka_docker_example_net